{"ast":null,"code":"var _jsxFileName = \"/Users/rajesh/Desktop/NewApp/chatapp0.3/public/src/components/ChatContainer.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\n\n/** @format */\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport ChatInput from \"./ChatInput\";\nimport Logout from \"./Logout\";\nimport axios from \"axios\";\nimport { getAllMessagesRoute, sendMessageRoute, allChats, sendMessageGroup, groupchatmessage } from \"../utils/APIRoutes\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatContainer(_ref) {\n  _s();\n\n  let {\n    currentChat,\n    currentUser,\n    socket,\n    groupChatName,\n    contacts,\n    activeComponent\n  } = _ref;\n  // console.log(`current chat :${JSON.stringify(messages)}`);\n  // console.log(`current user : ${JSON.stringify(currentUser)}`);\n  const [messages, setMessages] = useState([]);\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [arrivalGroupMessage, setArrivalGroupMessage] = useState(null);\n  const [groupmessages, setGroupmessages] = useState([]);\n  console.log(`messages : ${messages}`);\n  console.log(`groupmessages : ${groupmessages}`);\n  const scrollRef = useRef();\n  useEffect(() => {\n    const fetchData = async () => {\n      if (currentChat) {\n        const response = await axios.post(getAllMessagesRoute, {\n          from: currentUser._id,\n          to: currentChat._id\n        });\n        setMessages(response.data); // console.log(response);\n        // //fetching single person chat Messages from db\n        // console.log(\"chat message :\" + JSON.stringify(response.data));\n      }\n    };\n\n    fetchData();\n  }, [currentChat]);\n  useEffect(() => {\n    const fetchGroup = async () => {\n      if (currentChat) {\n        const response = await axios.post(groupchatmessage, {\n          from: currentUser._id,\n          to: currentChat.name\n        });\n        setGroupmessages(response.data);\n      }\n    };\n\n    fetchGroup();\n  }, [currentChat]); // console.log(`group chat data :${JSON.stringify(groupmessages.messages)}`);\n  // for (let key in groupmessages) {\n  // \tconsole.log(`message :${JSON.stringify(groupmessages.key)}`);\n  // }\n\n  const handleSendMsg = async msg => {\n    await axios.post(sendMessageRoute, {\n      from: currentUser._id,\n      to: currentChat._id,\n      message: msg\n    });\n    socket.current.emit(\"send-msg\", {\n      to: currentChat._id,\n      from: currentUser._id,\n      message: msg\n    });\n    const msgs = [...messages]; // console.log(`messages :${JSON.stringify(msgs)}`);\n\n    msgs.push({\n      fromSelf: true,\n      message: msg\n    });\n    setMessages(msgs); // post message to db and emitting server\n    //console.log(\"sent Message :\" + JSON.stringify(msgs));\n  };\n\n  const handleGroupMsg = async msg => {\n    await axios.post(sendMessageGroup, {\n      from: currentUser._id,\n      to: currentChat.name,\n      messages: msg\n    });\n    const msgs = [...messages]; // console.log(`messages :${JSON.stringify(msgs)}`);\n\n    msgs.push({\n      fromSelf: true,\n      message: msg\n    });\n    setGroupmessages(msgs);\n  };\n\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msg-recieved\", msg => {\n        setArrivalMessage({\n          fromSelf: false,\n          message: msg\n        });\n      });\n    }\n  }, []);\n  useEffect(() => {\n    arrivalMessage && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage]);\n  useEffect(() => {\n    arrivalGroupMessage && setGroupmessages(prev => [...prev, arrivalGroupMessage]);\n  }, [arrivalGroupMessage]);\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]); // let chats = false;\n  // console.log(\"chat container\");\n  // // console.log(Object.values(contacts));\n  // const arr1 = Object.values(contacts);\n  // const arr2 = Object.values(groupChatName);\n  // //console.log(arr2);\n  // arr1.map((user) => {\n  // \tconsole.log(`user._id: ${JSON.stringify(user._id)}`);\n  // \tif (user._id === currentUser._id) {\n  // \t\tchats = false;\n  // \t\tconsole.log(`true`);\n  // \t} else {\n  // \t\tchats = true;\n  // \t}\n  // });\n  // arr2.map((user) => {\n  // \tif (user._id === currentUser._id) {\n  // \t\tchats = true;\n  // \t} else {\n  // \t\tchats = false;\n  // \t}\n  // });\n  // \t// Object.keys(groupmessages).map((user) => {\n  // \t// \tconsole.log(\"check groupmessages  : \" + JSON.stringify(user));\n  // \t// });\n  // \t// console.log(`groupmessages : ${typeof groupmessages}`);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: chats ? currentChat && /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/svg+xml;base64,${currentChat.avatarImage}`,\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentChat.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.map(message => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: scrollRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${message.fromSelf ? \"sended\" : \"recieved\"}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content \",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: message.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 14\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 12\n            }, this)\n          }, uuidv4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        handleSendMsg: handleSendMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this) : currentChat && groupChatName && /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/svg+xml;base64,${currentChat.avatarImage}`,\n              alt: \"avatar\" // onClick={(chats) => {\n              // \tchats = false;\n              // }}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentChat.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: Object.keys(groupmessages).map(message => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: scrollRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${message.fromSelf ? \"sended\" : \"recieved\"}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content \",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: messages.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 14\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 12\n            }, this)\n          }, uuidv4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        handleGroupMsg: handleGroupMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ChatContainer, \"u8AE1/LyJTwnu4Ewft2rISc7dxg=\");\n\n_c = ChatContainer;\nconst Container = styled.div`\n\tdisplay: grid;\n\tgrid-template-rows: 10% 80% 10%;\n\tgap: 0.1rem;\n\toverflow: hidden;\n\t@media screen and (min-width: 720px) and (max-width: 1080px) {\n\t\tgrid-template-rows: 15% 70% 15%;\n\t}\n\t.chat-header {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tpadding: 0 2rem;\n\t\t.user-details {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tgap: 1rem;\n\t\t\t.avatar {\n\t\t\t\timg {\n\t\t\t\t\theight: 3rem;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.username {\n\t\t\t\th3 {\n\t\t\t\t\tcolor: white;\n\t\t\t\t\ttext-transform: capitalize;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t.chat-messages {\n\t\tpadding: 1rem 2rem;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: 1rem;\n\t\toverflow: auto;\n\t\t&::-webkit-scrollbar {\n\t\t\twidth: 0.2rem;\n\t\t\t&-thumb {\n\t\t\t\tbackground-color: #ffffff39;\n\t\t\t\twidth: 0.1rem;\n\t\t\t\tborder-radius: 1rem;\n\t\t\t}\n\t\t}\n\t\t.message {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\t.content {\n\t\t\t\tmax-width: 40%;\n\t\t\t\toverflow-wrap: break-word;\n\t\t\t\tpadding: 1rem;\n\t\t\t\tfont-size: 1.1rem;\n\t\t\t\tborder-radius: 1rem;\n\t\t\t\tcolor: #d1d1d1;\n\t\t\t\t@media screen and (min-width: 720px) and (max-width: 1080px) {\n\t\t\t\t\tmax-width: 70%;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t.sended {\n\t\t\tjustify-content: flex-end;\n\t\t\t.content {\n\t\t\t\tbackground-color: #4f04ff21;\n\t\t\t}\n\t\t}\n\t\t.recieved {\n\t\t\tjustify-content: flex-start;\n\t\t\t.content {\n\t\t\t\tbackground-color: #9900ff20;\n\t\t\t}\n\t\t}\n\t}\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","ChatInput","Logout","axios","getAllMessagesRoute","sendMessageRoute","allChats","sendMessageGroup","groupchatmessage","v4","uuidv4","ChatContainer","currentChat","currentUser","socket","groupChatName","contacts","activeComponent","messages","setMessages","arrivalMessage","setArrivalMessage","arrivalGroupMessage","setArrivalGroupMessage","groupmessages","setGroupmessages","console","log","scrollRef","fetchData","response","post","from","_id","to","data","fetchGroup","name","handleSendMsg","msg","message","current","emit","msgs","push","fromSelf","handleGroupMsg","on","prev","scrollIntoView","behavior","chats","avatarImage","username","map","Object","keys","Container","div"],"sources":["/Users/rajesh/Desktop/NewApp/chatapp0.3/public/src/components/ChatContainer.jsx"],"sourcesContent":["/** @format */\n\n/** @format */\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport ChatInput from \"./ChatInput\";\nimport Logout from \"./Logout\";\nimport axios from \"axios\";\nimport {\n\tgetAllMessagesRoute,\n\tsendMessageRoute,\n\tallChats,\n\tsendMessageGroup,\n\tgroupchatmessage,\n} from \"../utils/APIRoutes\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function ChatContainer({\n\tcurrentChat,\n\tcurrentUser,\n\tsocket,\n\tgroupChatName,\n\n\tcontacts,\n\tactiveComponent,\n}) {\n\t// console.log(`current chat :${JSON.stringify(messages)}`);\n\t// console.log(`current user : ${JSON.stringify(currentUser)}`);\n\tconst [messages, setMessages] = useState([]);\n\tconst [arrivalMessage, setArrivalMessage] = useState(null);\n\tconst [arrivalGroupMessage, setArrivalGroupMessage] = useState(null);\n\tconst [groupmessages, setGroupmessages] = useState([]);\n\n\tconsole.log(`messages : ${messages}`);\n\tconsole.log(`groupmessages : ${groupmessages}`);\n\n\tconst scrollRef = useRef();\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tif (currentChat) {\n\t\t\t\tconst response = await axios.post(getAllMessagesRoute, {\n\t\t\t\t\tfrom: currentUser._id,\n\t\t\t\t\tto: currentChat._id,\n\t\t\t\t});\n\t\t\t\tsetMessages(response.data);\n\t\t\t\t// console.log(response);\n\t\t\t\t// //fetching single person chat Messages from db\n\t\t\t\t// console.log(\"chat message :\" + JSON.stringify(response.data));\n\t\t\t}\n\t\t};\n\t\tfetchData();\n\t}, [currentChat]);\n\n\tuseEffect(() => {\n\t\tconst fetchGroup = async () => {\n\t\t\tif (currentChat) {\n\t\t\t\tconst response = await axios.post(groupchatmessage, {\n\t\t\t\t\tfrom: currentUser._id,\n\t\t\t\t\tto: currentChat.name,\n\t\t\t\t});\n\t\t\t\tsetGroupmessages(response.data);\n\t\t\t}\n\t\t};\n\t\tfetchGroup();\n\t}, [currentChat]);\n\t// console.log(`group chat data :${JSON.stringify(groupmessages.messages)}`);\n\t// for (let key in groupmessages) {\n\t// \tconsole.log(`message :${JSON.stringify(groupmessages.key)}`);\n\t// }\n\n\tconst handleSendMsg = async (msg) => {\n\t\tawait axios.post(sendMessageRoute, {\n\t\t\tfrom: currentUser._id,\n\t\t\tto: currentChat._id,\n\t\t\tmessage: msg,\n\t\t});\n\t\tsocket.current.emit(\"send-msg\", {\n\t\t\tto: currentChat._id,\n\t\t\tfrom: currentUser._id,\n\t\t\tmessage: msg,\n\t\t});\n\n\t\tconst msgs = [...messages];\n\t\t// console.log(`messages :${JSON.stringify(msgs)}`);\n\t\tmsgs.push({\n\t\t\tfromSelf: true,\n\t\t\tmessage: msg,\n\t\t});\n\t\tsetMessages(msgs);\n\t\t// post message to db and emitting server\n\t\t//console.log(\"sent Message :\" + JSON.stringify(msgs));\n\t};\n\n\tconst handleGroupMsg = async (msg) => {\n\t\tawait axios.post(sendMessageGroup, {\n\t\t\tfrom: currentUser._id,\n\t\t\tto: currentChat.name,\n\t\t\tmessages: msg,\n\t\t});\n\t\tconst msgs = [...messages];\n\t\t// console.log(`messages :${JSON.stringify(msgs)}`);\n\t\tmsgs.push({\n\t\t\tfromSelf: true,\n\t\t\tmessage: msg,\n\t\t});\n\t\tsetGroupmessages(msgs);\n\t};\n\n\tuseEffect(() => {\n\t\tif (socket.current) {\n\t\t\tsocket.current.on(\"msg-recieved\", (msg) => {\n\t\t\t\tsetArrivalMessage({\n\t\t\t\t\tfromSelf: false,\n\t\t\t\t\tmessage: msg,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tarrivalMessage && setMessages((prev) => [...prev, arrivalMessage]);\n\t}, [arrivalMessage]);\n\n\tuseEffect(() => {\n\t\tarrivalGroupMessage &&\n\t\t\tsetGroupmessages((prev) => [...prev, arrivalGroupMessage]);\n\t}, [arrivalGroupMessage]);\n\n\tuseEffect(() => {\n\t\tscrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\n\t}, [messages]);\n\n\t// let chats = false;\n\n\t// console.log(\"chat container\");\n\t// // console.log(Object.values(contacts));\n\t// const arr1 = Object.values(contacts);\n\t// const arr2 = Object.values(groupChatName);\n\t// //console.log(arr2);\n\t// arr1.map((user) => {\n\t// \tconsole.log(`user._id: ${JSON.stringify(user._id)}`);\n\t// \tif (user._id === currentUser._id) {\n\t// \t\tchats = false;\n\t// \t\tconsole.log(`true`);\n\t// \t} else {\n\t// \t\tchats = true;\n\t// \t}\n\t// });\n\t// arr2.map((user) => {\n\t// \tif (user._id === currentUser._id) {\n\t// \t\tchats = true;\n\t// \t} else {\n\t// \t\tchats = false;\n\t// \t}\n\t// });\n\t// \t// Object.keys(groupmessages).map((user) => {\n\t// \t// \tconsole.log(\"check groupmessages  : \" + JSON.stringify(user));\n\t// \t// });\n\t// \t// console.log(`groupmessages : ${typeof groupmessages}`);\n\n\treturn (\n\t\t<>\n\t\t\t{chats\n\t\t\t\t? currentChat && (\n\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t<div className=\"chat-header\">\n\t\t\t\t\t\t\t\t<div className=\"user-details\">\n\t\t\t\t\t\t\t\t\t<div className=\"avatar\">\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc={`data:image/svg+xml;base64,${currentChat.avatarImage}`}\n\t\t\t\t\t\t\t\t\t\t\talt=\"avatar\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"username\">\n\t\t\t\t\t\t\t\t\t\t<h3>{currentChat.username}</h3>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<Logout />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"chat-messages\">\n\t\t\t\t\t\t\t\t{messages.map((message) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div ref={scrollRef} key={uuidv4()}>\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`message ${\n\t\t\t\t\t\t\t\t\t\t\t\t\tmessage.fromSelf ? \"sended\" : \"recieved\"\n\t\t\t\t\t\t\t\t\t\t\t\t}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"content \">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{message.message}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<ChatInput handleSendMsg={handleSendMsg} />\n\t\t\t\t\t\t</Container>\n\t\t\t\t  )\n\t\t\t\t: currentChat &&\n\t\t\t\t  groupChatName && (\n\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t<div className=\"chat-header\">\n\t\t\t\t\t\t\t\t<div className=\"user-details\">\n\t\t\t\t\t\t\t\t\t<div className=\"avatar\">\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc={`data:image/svg+xml;base64,${currentChat.avatarImage}`}\n\t\t\t\t\t\t\t\t\t\t\talt=\"avatar\"\n\t\t\t\t\t\t\t\t\t\t\t// onClick={(chats) => {\n\t\t\t\t\t\t\t\t\t\t\t// \tchats = false;\n\t\t\t\t\t\t\t\t\t\t\t// }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"username\">\n\t\t\t\t\t\t\t\t\t\t<h3>{currentChat.name}</h3>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<Logout />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"chat-messages\">\n\t\t\t\t\t\t\t\t{Object.keys(groupmessages).map((message) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div ref={scrollRef} key={uuidv4()}>\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`message ${\n\t\t\t\t\t\t\t\t\t\t\t\t\tmessage.fromSelf ? \"sended\" : \"recieved\"\n\t\t\t\t\t\t\t\t\t\t\t\t}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"content \">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{messages.message}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<ChatInput handleGroupMsg={handleGroupMsg} />\n\t\t\t\t\t\t</Container>\n\t\t\t\t  )}\n\t\t</>\n\t);\n}\n\nconst Container = styled.div`\n\tdisplay: grid;\n\tgrid-template-rows: 10% 80% 10%;\n\tgap: 0.1rem;\n\toverflow: hidden;\n\t@media screen and (min-width: 720px) and (max-width: 1080px) {\n\t\tgrid-template-rows: 15% 70% 15%;\n\t}\n\t.chat-header {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tpadding: 0 2rem;\n\t\t.user-details {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tgap: 1rem;\n\t\t\t.avatar {\n\t\t\t\timg {\n\t\t\t\t\theight: 3rem;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.username {\n\t\t\t\th3 {\n\t\t\t\t\tcolor: white;\n\t\t\t\t\ttext-transform: capitalize;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t.chat-messages {\n\t\tpadding: 1rem 2rem;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: 1rem;\n\t\toverflow: auto;\n\t\t&::-webkit-scrollbar {\n\t\t\twidth: 0.2rem;\n\t\t\t&-thumb {\n\t\t\t\tbackground-color: #ffffff39;\n\t\t\t\twidth: 0.1rem;\n\t\t\t\tborder-radius: 1rem;\n\t\t\t}\n\t\t}\n\t\t.message {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\t.content {\n\t\t\t\tmax-width: 40%;\n\t\t\t\toverflow-wrap: break-word;\n\t\t\t\tpadding: 1rem;\n\t\t\t\tfont-size: 1.1rem;\n\t\t\t\tborder-radius: 1rem;\n\t\t\t\tcolor: #d1d1d1;\n\t\t\t\t@media screen and (min-width: 720px) and (max-width: 1080px) {\n\t\t\t\t\tmax-width: 70%;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t.sended {\n\t\t\tjustify-content: flex-end;\n\t\t\t.content {\n\t\t\t\tbackground-color: #4f04ff21;\n\t\t\t}\n\t\t}\n\t\t.recieved {\n\t\t\tjustify-content: flex-start;\n\t\t\t.content {\n\t\t\t\tbackground-color: #9900ff20;\n\t\t\t}\n\t\t}\n\t}\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}